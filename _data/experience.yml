# Experience Section
- layout: left
  name: 株式会社ホープス
  qualification: SIer、システム運用、ソフト開発
  dates: 2020.02 ~ 2021.02
  description: | 
  ## `約 6ヶ月` 程、I商事の 受発注システムのスクラッチ開発 (アジャイル/スクラム) で サーバサイドエンジニアとして携わっています。
  >主なタスクとしてはプロダクトオーダー（PO）からの仕様説明を徹底的に聞いて  
  仕様どおりに内部または外部の`APIの内部ロジックを実装`したり、  
  ビジネスロジックの`自動テストのためのテストコードを作成`する役割でした。  

  ***技術に関して具体的には下記の通りです。***    
  【発注チームに配属していたため、主に発注システムを開発しました。】  

  - `検索、登録、修正機能等`
  - `仕様のAPI機能（REST API）を実装してフロント担当ものに渡す。`
  - 使用していた技術：`Java、Querydsl、Micronaut（フレームワーク）、SQL`
  - 外部システムからの`マスタ情報連携(バッチ処理)`
    - AWSからCSVファイルをダウンロードしてそれをシステムの方にインサートする処理
  - 自動テストのためにSeedテーブル作成及び`テストコード`作成（Groovy）  

  日々やることはスプリントプラニング段階で詳細化して置くため、  
  かなり明確ですが<U>担当した教務以外にもDBでの無駄なSQLQueryが乱立して性能が低下したり、  
  ジャンクインサートの単位を1000行ずつ読み取る形に変えてアプリケーションの性能に貢献</U>できるように努めました。  

  この過程で公式ドキュメンタリーを参照して解決するように努力しました。(OpenCSV、Micronautなど)
  それらを読み込んでからコードを書き始めましたが、
  分からないところが沢山ありましたので日本語、韓国語、英語を問わずグーグルで調べながらコードを書きました。 (Qiita、stackoverflowなど)  

  またどうしても解決できない部分は（技術的に可能か）は開発リーダさんまたはベテランエンジニアさんに相談して解決するようにしました。
  結果的には工数を減らすこと共にアプリケーションのクォリティを上げることができましたと開発リーダさんに言われましたのでで嬉しかったです。   

  <U>開発作業を行う際に大変だったところは、開発側と設計側の認識が違ったりして仕様が大きく変わったり、
  影響を及ぼす範囲が広くなって工数が増えてしまったことでした。</U>
  また、実際に開発を始めないとどれくらい時間がかかるのかそれを開発に着手する前にブレイクダウンして把握するのが難しかったのですごく勉強になりました。
  <U>これからは下記の解決方法をTryとして実行していきたいとおもいます。</U>

  - 過去の作業時間を振り返って逆算して所要時間を出す。
  - 少しのバッファを追加すること、
  - 全体会議や無駄話で時間が延びる時がある。
  - タスクを詳細化する際に全員と話しをすることで見積もりに甘いところを見つける可能性が高まります。

  そして、毎日必要な部分を自主勉強しながら進む感じでしたので
  <U>個人的に技術的な疑問や提案があれば共有して皆が見れることができた方が良いと思い、プロジェクトマネージャさんに提案</U>したことがありました。
  結果的にスラックのチャンネルが作られて全ての開発メンバーが必要な内容を質問したり回答したりすることができるようになりました。
